name: Release Chrome Extension

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.4.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Install dependencies
      run: pnpm install

    - name: Get version from tag or input
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

    - name: Extract changelog for current version
      uses: frangio/extract-changelog@v1
      id: changelog

    - name: Build extension
      run: |
        chmod +x scripts/release.sh
        ./scripts/release.sh package -v ${{ steps.get_version.outputs.version_number }}

    - name: Upload to Chrome Web Store
      uses: mnao305/chrome-extension-upload@v5.0.0
      with:
        extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
        client-id: ${{ secrets.CHROME_CLIENT_ID }}
        client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
        refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
        file-path: dist/extension-${{ steps.get_version.outputs.version }}.zip
        publish: true

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: Release ${{ steps.get_version.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        files: |
          dist/extension-${{ steps.get_version.outputs.version }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify success
      if: success()
      run: |
        echo "üéâ Successfully released Chrome Extension ${{ steps.get_version.outputs.version }}"
        echo "üì¶ GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.version }}"
        echo "üè™ Chrome Web Store submission completed!"

    - name: Notify failure
      if: failure()
      run: |
        echo "‚ùå Release failed for version ${{ steps.get_version.outputs.version }}"
        echo "Please check the logs above for details."
